{"_id":{"$oid":"57adee21d0de182e6637187d"},"type":"workflowTemplate","name":"Contar Workflows","description":"Conta o número de workflows que posuan un estado estado determinado","codeBase":"MultipleTsvFiles( files, ('ExecutionID, 'CaseID, 'TaskID, 'NuevoEstado, 'Timestamp))\r\n      .filter( 'TaskID ) {\r\n        fields : (String) =\u003e {\r\n          val (taskID) = fields\r\n          \r\n          %%REPEAT%%\r\n        }\r\n      }\r\n      .groupBy( 'TaskID ){ _.size('Count)}\r\n      .rename(('TaskID, 'Count) -\u003e (('TaskID, 'Count)))\r\n      .write(output)","codeRepeat":"taskID == %%TASKID%% || %%ADDOTHER%%"}
{"_id":{"$oid":"57adee21d0de182e6637187e"},"type":"taskTemplate","name":"Estado de tarefas","description":"Conta dentro dun workflow determinado, se unhas tarefas concretas están ou estiveron: iniciadas, executadas, paradas ou finalizadas","codeBase":"MultipleTsvFiles( files, ('ExecutionID, 'CaseID, 'TaskID, 'NuevoEstado, 'Timestamp))\r\n      .filter( 'TaskID, 'NuevoEstado ) {\r\n        fields : (String, String) =\u003e {\r\n          val (taskID, nuevoEstado) = fields\r\n          \r\n          %%REPEAT%%\r\n        }\r\n      }\r\n      .groupBy( 'TaskID ){ _.size('Count)}\r\n      .rename(('TaskID, 'Count) -\u003e (('TaskID, 'Count)))\r\n      .write(output)","codeRepeat":"taskID == %%TASKID%% \u0026\u0026 nuevoEstado == %%STATE%% || %%ADDOTHER%%"}
{"_id":{"$oid":"57adee21d0de182e6637187f"},"type":"propertyTemplate","name":"Plantilla para properties","description":"Permite agrupar por unha propiedade e realizar unha operacion de contar, maximo, minimo, media","codeBase":"val pipe = MultipleTsvFiles( files, ('ExecutionID, 'PropertyName, 'PropertyContext, 'Agent, 'CaseID, 'IsCommited, 'Timestamp, 'Value))\r\n\r\n      %%PROPFILTER%%\r\n\r\n      var result = %%PROPNAME%%\r\n\r\n      %%OTHERREPEAT%%\r\n\r\n      result = result.project('ExecutionID, 'CaseID).joinWithSmaller(('ExecutionID, 'CaseID) -\u003e ('ExecutionID, 'CaseID), propRedux)\r\n      result = result.groupBy('PropertyName){_.size%%OPREDUX%%('Value)}.rename(('PropertyName, 'Value) -\u003e (('Property, '%%NAMEOPREDUX%%)))\r\n      result.write(output)","codePipePropFilter":"val %%PROPITERNAME%% = pipe.filter( 'PropertyName, 'Value ) {\r\n        fields : (String, %%VALUETYPE%%) =\u003e {\r\n          val (propertyName, value) = fields\r\n          propertyName == \"%%PROPITERNAME%%\" \u0026\u0026 value %%OP%% %%VALUE%%\r\n        }\r\n      }.unique('ExecutionID, 'CaseID, 'PropertyName, 'Value)\r\n\r\n      %%OTHERPROPFILTER%%","codePipeReduxProp":"val propRedux = pipe.filter( 'PropertyName ) {\r\n        fields : (String) =\u003e {\r\n          val (propertyName) = fields\r\n          propertyName == \"%%PROPREDUXNAME%%\"\r\n        }\r\n      }.unique('ExecutionID, 'CaseID, 'PropertyName, 'Value)","codeAndProp":"result = result.project('ExecutionID, 'CaseID).joinWithSmaller(('ExecutionID, 'CaseID) -\u003e ('ExecutionID, 'CaseID), %%PROPITERNAME%%)\r\n      %%OTHERREPEAT%%","codeOrProp":"result = result ++ %%PROPITERNAME%%\r\n      %%OTHERREPEAT%%"}
